<!--JS Scripts-->
<script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.1/jquery.min.js'></script>
<script src='https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha/js/bootstrap.min.js'></script>
<script
  src="https://code.jquery.com/jquery-3.1.1.min.js"
  integrity="sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8="
  crossorigin="anonymous"></script>
<script src="/javascripts/semantic.min.js"></script>
<!--JQuery For SemanticUI-->
<script>
  $('.ui.dropdown')
  .dropdown({
    action: 'combo'
  });
  
  $('.message .close')
  .on('click', function() {
    $(this)
      .closest('.message')
      .transition('fade')
    ;
  })
;

  $('.ui.form')
  .form({
    fields: {
      email : {
        identifier : 'email',
        rules : [
          {
            type   : 'empty',
            prompt : 'Please enter your email'
          }
        ]
      },
      name: {
        identifier: 'name',
        rules: [
          {
            type   : 'empty',
            prompt : 'Please enter your name'
          }
        ]
      },
      username: {
        identifier: 'username',
        rules: [
          {
            type   : 'empty',
            prompt : 'Please enter a username'
          }
        ]
      },
      password: {
        identifier: 'password',
        rules: [
          {
            type   : 'empty',
            prompt : 'Please enter a password'
          },
          {
            type   : 'minLength[6]',
            prompt : 'Your password must be at least {ruleValue} characters'
          }
        ]
      },
    }
  })
;
$(document).ready(function(){
  $('#upload-btn').click(function(){
     $('#upload-modal').modal('show');    
  });
  });

$(document).ready(function(){
  $('#update-page').click(function(){
     $('#update-modal').modal('show');    
  });
  });

$(document).ready(function(){
  $('#EditProfile-btn').click(function(){
     $('#EditProfile-modal').modal('show');    
  });
  });
function readURL1(input) {
      if (input.files && input.files[0]) {
          var reader = new FileReader();
          
          reader.onload = function (e) {
              $('#img-preview').attr('src', e.target.result);
          }
          
          reader.readAsDataURL(input.files[0]);
      }
  }
  function readURL2(input) {
    if (input.files && input.files[0]) {
        var reader = new FileReader();
        
        reader.onload = function (e) {
            $('#Userimg-preview').attr('src', e.target.result);
        }
        
        reader.readAsDataURL(input.files[0]);
    }
}
$("#imgInp").change(function(){
      readURL1(this);
  });
  $("#Userimg").change(function(){
    readURL2(this);
});

  $('.ui.fluid.multiple.search.selection.dropdown').dropdown('setting', {
    allowAdditions: true,
    message: {addResult:'Here your customized message: <b>{term}</b>'},
    action: 'combo'
  });

  $(function() { 
    $("input:text").keydown(function(evt) { 
      if (evt.keyCode == 13) return false; 
    }); 
  });

  $('#tag-clear-btn').on('click', function() {
    $('.ui.fluid.multiple.search.selection.dropdown')
      .dropdown('clear')
    ;
  })
;
$('.ui.accordion')
  .accordion()
;
$('.special.cards .image').dimmer({
  on: 'hover'
});

if (document.getElementById('imgInp')) {
  document.getElementById('imgInp').addEventListener('change', function (e) {
    var formData = new FormData();
    console.log(this, this.files);
    formData.append('img', this.files[0]);
    console.log(formData.get('img'));
    var xhr = new XMLHttpRequest();
    xhr.onload = function () {
      if (xhr.status === 200) {
        var url = JSON.parse(xhr.responseText).url;
        document.getElementById('img-url').value = url;
        document.getElementById('img-preview').src = url;
        document.getElementById('img-preview').style.display = 'inline';
      } else {
        console.error(xhr.responseText);
      }
    };
    xhr.open('POST', '/pages/img');
    xhr.send(formData);
  });
}

if (document.getElementById('Userimg')) {
  document.getElementById('Userimg').addEventListener('change', function (e) {
    var formData = new FormData();
    console.log(this, this.files);
    formData.append('img', this.files[0]);
    console.log(formData.get('img'));
    var xhr = new XMLHttpRequest();
    xhr.onload = function () {
      if (xhr.status === 200) {
        console.log(xhr.responseText);
        var url = JSON.parse(xhr.responseText).url;
        document.getElementById('Userimg-url').value = url;
        document.getElementById('Userimg-preview').src = url;
        document.getElementById('Userimg-preview').style.display = 'inline';
      } else {
        console.error(xhr.responseText);
      }
    };
    xhr.open('POST', '/users/profileImg');
    xhr.send(formData);
  });
}

if (document.getElementById('updateImgInp')) {
  document.getElementById('updateImgInp').addEventListener('change', function (e) {
    var formData = new FormData();
    console.log(this, this.files);
    formData.append('img', this.files[0]);
    console.log(formData.get('img'));
    var xhr = new XMLHttpRequest();
    xhr.onload = function () {
      if (xhr.status === 200) {
        console.log(xhr.responseText);
        var url = JSON.parse(xhr.responseText).url;
        document.getElementById('updateImg-url').value = url;
        document.getElementById('updateImg-preview').src = url;
        document.getElementById('updateImg-preview').style.display = 'inline';
      } else {
        console.error(xhr.responseText);
      }
    };
    xhr.open('POST', `/pages/img/update`);
    xhr.send(formData);
  });
}
var el = document.getElementById('userFollow');
if(el){
  el.addEventListener('click', function (e) {
    console.log(document.querySelector('#myId').value);
    console.log(document.querySelector('#page-user-id').value);
    var isLoggedIn = document.querySelector('#myId');
      if (isLoggedIn) {
        var userId = document.querySelector('#page-user-id').value;
        var myId = isLoggedIn.value;
        if (userId !== myId) {
          if (confirm('팔로잉하시겠습니까?')) {
            var xhr = new XMLHttpRequest();
            xhr.onload = function () {
              if (xhr.status === 200) {
                location.reload(); 
              } else {
                console.error(xhr.responseText);
              }
            };
            xhr.open('POST', '/users/' + userId + '/follow');
            xhr.send();
          }
        }
      }
    });
}
var el = document.getElementById('userFollow1');
if(el){
  el.addEventListener('click', function (e) {
    console.log(document.querySelector('#myId').value);
    console.log(document.querySelector('#page-user-id').value);
    var isLoggedIn = document.querySelector('#myId');
      if (isLoggedIn) {
        var userId = document.querySelector('#page-user-id').value;
        var myId = isLoggedIn.value;
        if (userId !== myId) {
          if (confirm('팔로잉하시겠습니까?')) {
            var xhr = new XMLHttpRequest();
            xhr.onload = function () {
              if (xhr.status === 200) {
                location.reload(); 
              } else {
                console.error(xhr.responseText);
              }
            };
            xhr.open('POST', '/users/' + userId + '/follow');
            xhr.send();
          }
        }
      }
    });
}
var el1 = document.querySelector('#userUnfollow');
if(el1) {
  el1.addEventListener('click', function () {
        var isLoggedIn = document.querySelector('#myId');
        if (isLoggedIn) {
          var userId = document.querySelector('#page-user-id').value;
          var myId = isLoggedIn.value;
          if (userId !== myId) {
            if (confirm('언팔로잉하시겠습니까?')) {
              var xhr = new XMLHttpRequest();
              xhr.onload = function () {
                if (xhr.status === 200) {
                  location.reload();
                } else {
                  console.error(xhr.responseText);
                }
              };
              xhr.open('POST', '/users/' + userId + '/unfollow');
              xhr.send();
            }
          }
        }
      });
}
var el1 = document.querySelector('#userUnFollow1');
if(el1) {
  el1.addEventListener('click', function () {
        var isLoggedIn = document.querySelector('#myId');
        if (isLoggedIn) {
          var userId = document.querySelector('#page-user-id').value;
          var myId = isLoggedIn.value;
          if (userId !== myId) {
            if (confirm('언팔로잉하시겠습니까?')) {
              var xhr = new XMLHttpRequest();
              xhr.onload = function () {
                if (xhr.status === 200) {
                  location.reload();
                } else {
                  console.error(xhr.responseText);
                }
              };
              xhr.open('POST', '/users/' + userId + '/unfollow');
              xhr.send();
            }
          }
        }
      });
}

var el1 = document.querySelector('#tagFollow');
if(el1) {
  el1.addEventListener('click', function () {
        var tag = document.querySelector('#tag-title').value;
            if (confirm('태그를 팔로잉하시겠습니까?')) event.preventDefault(); {
              var xhr = new XMLHttpRequest();
              xhr.onload = function () {
                if (xhr.status === 200) {
                  location.reload();
                } else {
                  console.error(xhr.responseText);
                }
              };
              xhr.open('POST', '/tag/' + tag + '/follow');
              xhr.send();
          }
      });
}

var el1 = document.querySelector('#tagUnFollow');
if(el1) {
  el1.addEventListener('click', function () {
        var tag = document.querySelector('#tag-title').value;
            if (confirm('태그를 언팔로잉하시겠습니까?')) event.preventDefault(); {
              var xhr = new XMLHttpRequest();
              xhr.onload = function () {
                if (xhr.status === 200) {
                  location.reload();
                } else {
                  console.error(xhr.responseText);
                }
              };
              xhr.open('POST', '/tag/' + tag + '/unfollow');
              xhr.send();
          }
      });
}
var el1 = document.querySelector('.userFollow');
if(el1) {
  el1.addEventListener('click', function () {
        var isLoggedIn = document.querySelector('#myId');
        if (isLoggedIn) {
          var userId = document.querySelector('#page-user-id').value;
          var myId = isLoggedIn.value;
          if (userId !== myId) {
            if (confirm('언팔로잉하시겠습니까?')) {
              var xhr = new XMLHttpRequest();
              xhr.onload = function () {
                if (xhr.status === 200) {
                  location.reload();
                } else {
                  console.error(xhr.responseText);
                }
              };
              xhr.open('POST', '/users/' + userId + '/follow');
              xhr.send();
            }
          }
        }
      });
}
var el1 = document.querySelector('.userUnFollow');
if(el1) {
  el1.addEventListener('click', function () {
        var isLoggedIn = document.querySelector('#myId');
        if (isLoggedIn) {
          var userId = document.querySelector('#page-user-id').value;
          var myId = isLoggedIn.value;
          if (userId !== myId) {
            if (confirm('언팔로잉하시겠습니까?')) {
              var xhr = new XMLHttpRequest();
              xhr.onload = function () {
                if (xhr.status === 200) {
                  location.reload();
                } else {
                  console.error(xhr.responseText);
                }
              };
              xhr.open('POST', '/users/' + userId + '/unfollow');
              xhr.send();
            }
          }
        }
      });
}
if (document.getElementById('commentForm')){
document.getElementById('commentForm').addEventListener('submit', function (e) {
  e.preventDefault();
  var pageId = e.target.pageId.value;
  var userId = e.target.commentUserId.value;
  var comment = e.target.content.value;
  if (!userId) {
    return alert('아이디를 입력하세요');
  }
  if (!comment) {
    return alert('댓글을 입력하세요');
  }
  var xhr = new XMLHttpRequest();
  xhr.onload = function () {
    if (xhr.status === 201) {
      console.log(xhr.responseText);
      getComment();
    } else {
      console.error(xhr.responseText);
    }
  };
  xhr.open('POST', '/comment/post');
  xhr.setRequestHeader('Content-Type', 'application/json');
  xhr.send(JSON.stringify({pageId : pageId, userId: userId, comment: comment }));
});
}

function getComment() {
  console.log('ajax load comment...');
  var xhr = new XMLHttpRequest();
  var pageId = document.querySelector('#page-id').value;
  var myId = document.querySelector('#myId').value;
  var myName = document.querySelector('#Myname').value;
  xhr.onload = function () {
    if (xhr.status === 200) {
      var comments = JSON.parse(xhr.responseText);
      var commentbody = document.querySelector('#comment-list');
      commentbody.innerHTML = '';
      comments.forEach((comment) => {
        var commentDate = new Date(comment.createdAt);
        var commentCreatedAt = commentDate.toDateString();
        var commentForm = `
        <div class="comment">
        <input id="commentUserId" type="hidden" value="${comment.user.id}">
        <input id="commentText" type="hidden" value="${comment.comment}">
        <input class="commentId" type="hidden" value="${comment.id}">
        <a class="avatar">
          <img src=" ${comment.user.img}">
        </a>
        <div class="content">
        <div class="comment-area">
          <a class="author"> ${comment.user.username} </a>
          <div class="metadata">
            <span class="date"> ${commentCreatedAt} </span>
          </div>
          <div class="text" name="commentText">
            ${comment.comment}
            <span class="Commentmenu" style="visibility: hidden;">
            <div class='circular ui icon simple dropdown button' style='background-color : rgba( 255, 255, 255, 0.5 );'>
            <i class="ellipsis vertical icon"></i>
              <div class="left menu">
              </div>
              </div>
            </span>
          </div>
          <div class="actions">
            <a class="reply">Reply</a>
          </div>
        </div>
        </div>
        `;
        commentbody.insertAdjacentHTML('beforeend', commentForm);
        var commentContent = document.getElementsByClassName('comment-area');
        if(commentContent.length === comments.length){
          [].forEach.call(commentContent, function(el) {
            if(el){
            el.addEventListener("mouseover", function(){
              el.getElementsByClassName('Commentmenu')[0].style.visibility = 'visible';    
          });
            el.addEventListener("mouseout", function(){
            el.getElementsByClassName('Commentmenu')[0].style.visibility = 'hidden';
          });
        }
        });
      }
        /* 
        */
        var commentList = document.querySelector('#comment-list');
        var commentMenu = document.createElement('button');
        var commentCol = commentList.getElementsByClassName('comment');
        if (commentCol.length === comments.length) {
          var commentMenu = document.getElementsByClassName('Commentmenu');
          for(var i=0; i<commentCol.length; i++) {
            var commentMenuLists = commentMenu[i].firstElementChild.childNodes[3];
            if(parseInt(comment.user.id,10) === parseInt(myId,10)) {
              commentMenuLists.innerHTML = `
              <div class="item" name="commentEdit"><i class="edit icon"></i> Edit</div>
              <div class="item" name="commentDelete"><i class="delete icon"></i> Remove</div>
              `;
            } else {
              commentMenuLists.innerHTML = `
              <div class="item"><i class="exclamation triangle icon"></i>Report</div>
              `;
            }
          }
        };
        var edits=document.querySelectorAll('.item[name=commentEdit]');
        var commentIds = document.querySelectorAll('.commentId');
        var commentText = document.querySelectorAll('.text[name=commentText]');
        var commentTextList = Array.prototype.slice.call(commentText);
        var originalcommentText= [];
        for(var i=0;i<commentTextList.length;i++){
          originalcommentText.push(commentTextList[i].innerText);
      }
        if(edits.length===commentIds.length){
          var editList = Array.prototype.slice.call(edits);
          edits.forEach((edit) => {
            edit.addEventListener('click', function(){
              var commentId = parseInt(editList.indexOf(edit),10)+1
              for(var i=0;i<commentTextList.length;i++){
                var commentTextElement = parseInt(commentTextList.indexOf(commentTextList[i]),10)+1;
                if(commentId === commentTextElement){
                  commentTextList[i].innerHTML = `
                  <form id="commentEdit" action="/comment/update/${commentId}" method="patch">
                  <textarea name="newComment">${originalcommentText[i]}</textarea>
                  </form>
                  <button class="small ui button" id="commentEditBtn" style='background-color : rgba( 255, 255, 255, 0.5 ); type="submit"'>Save</button>
                  <span class="Commentmenu" style="visibility: hidden;">
                  </span>
                  </div>
                  `;
                }
              }
              var commentEditBtn = document.getElementById('commentEditBtn');
                  commentEditBtn.addEventListener('click', function (e) { // 수정 클릭 시
                  e.preventDefault();
                  e.stopPropagation();
                  var commentEdit = document.getElementById('commentEdit');
                  var newComment = commentEdit.querySelector('textarea').value;
                  var xhr = new XMLHttpRequest();
                  xhr.onload = function () {
                    if (xhr.status === 200) {
                      console.log(xhr.responseText);
                      getComment();
                    } else {
                      console.error(xhr.responseText);
                    }
                  };
                  commentId = commentId.toString();
                  xhr.open('PATCH', `/comment/${commentId}`);
                  xhr.setRequestHeader('Content-Type', 'application/json');
                  xhr.send(JSON.stringify({ comment: newComment }));
                  
                });
              
            });
          });
        }
        var removes=document.querySelectorAll('.item[name=commentDelete]');
        if(removes.length===commentIds.length) {
           removes.forEach(function (remove) {
             remove.addEventListener('click',function(){
               var removeList = Array.prototype.slice.call(removes);
               var commentId = parseInt(removeList.indexOf(remove),10)+1
               console.log(commentId);
               var xhr = new XMLHttpRequest();
               xhr.onload = function () {
                 if (xhr.status === 200) {
                   console.log(xhr.responseText);
                   getComment();
                 } else {
                   console.error(xhr.responseText);
                 }
               };
               xhr.open('DELETE', `/comment/${commentId}`);
               xhr.setRequestHeader('Content-Type', 'application/json');
               xhr.send(JSON.stringify({ comment: newComment }));
          });
        })
        }
      });
    } else {
      console.error(xhr.responseText);
    }
  };
  xhr.open('GET', `/comment/${pageId}`);
  xhr.send();
}
function resize(obj) {
  obj.style.height = "1px";
  obj.style.height = (1+obj.scrollHeight)+"px";
}

var el1 = document.getElementById('likeBtn');
if(el1) {
  el1.addEventListener('click', function () {
        var isLoggedIn = document.querySelector('#myId');
        var pageId = document.querySelector('#page-id').value;
        var userId = isLoggedIn.value;
        console.log(isLoggedIn.value);
        if(isLoggedIn){
          var xhr = new XMLHttpRequest();
              xhr.onload = function () {
                if (xhr.status === 200) {
                  console.log(xhr.responseText);
                  location.reload();
                } else {
                  console.error(xhr.responseText);
                }
              };
              xhr.open('POST', `/like`);
              xhr.setRequestHeader('Content-Type', 'application/json');
              xhr.send(JSON.stringify({ pageId: pageId, userId: userId }));
        }
  });
}

var el1 = document.getElementById('likedBtn');
if(el1) {
  el1.addEventListener('click', function () {
        var isLoggedIn = document.querySelector('#myId');
        var pageId = document.querySelector('#page-id').value;
        var userId = isLoggedIn.value;
        console.log(isLoggedIn.value);
        if(isLoggedIn){
          var xhr = new XMLHttpRequest();
              xhr.onload = function () {
                if (xhr.status === 200) {
                  console.log(xhr.responseText);
                  location.reload();
                } else {
                  console.error(xhr.responseText);
                }
              };
              xhr.open('DELETE', `/like`);
              xhr.setRequestHeader('Content-Type', 'application/json');
              xhr.send(JSON.stringify({ pageId: pageId, userId: userId }));
        }
  });
}
if(document.getElementById('likeNum')){
$(document).ready(function () {
    $('#likeNum').popup({
        hoverable: true,
        popup: '.ui.popup',
        inline: true,
        position: 'right center'
});
    });
}

</script>

</body>
</html>